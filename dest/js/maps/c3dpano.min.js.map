{"version":3,"sources":["c3dpano.js"],"names":["path","Ceramic3DPanorama","e","r","t","document","getElementById","a","n","o","i","f","u","c","s","l","v","E","d","m","g","p","T","_","h","R","A","getContext","U","Float32Array","Array","P","L","w","I","M","B","Math","PI","y","width","height","viewport","D","scrollWidth","scrollHeight","F","x","C","tan","cos","sin","b","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","useProgram","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","uniformMatrix3fv","uniformMatrix4fv","uniform1f","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","uniform1i","drawArrays","TRIANGLES","X","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","error","getProgramInfoLog","getShaderInfoLog","N","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGBA","UNSIGNED_BYTE","generateMipmap","getError","NO_ERROR","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","Y","clearColor","getUniformLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","STATIC_DRAW","onmousedown","which","addEventListener","preventDefault","offsetLeft","window","ontouchend","pageX","pageY","offsetTop","changedTouches","ontouchmove","wheelDelta","min","max","deltaY","reload","cameraVersion","deleteTexture","XMLHttpRequest","onprogress","length","total","isNaN","loaded","this","status","getAllResponseHeaders","match","Blob","response","type","Image","onload","src","URL","createObjectURL","substr","open","responseType","send","redraw","canvas","panorams","c3dpano","onselectstart","ondragstart","Object"],"mappings":"aAAA,IAAIA,KACJ,SAASC,kBAAkBC,EAAGC,EAAGC,GAAjC,SAASH,EAAAA,GACH,IACFE,EAAAD,EACE,iBAAcC,IAAAA,EAAAE,SAAAC,eAAAH,IACZ,IAAKC,EAALG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvB,EAAAwB,WAAA,UAAAxB,EAAAwB,WAAA,sBACA,IAAAC,EAAA,IAAYA,EAAA,oBAA0BtB,aAAtCuB,aAAAC,MAGA,IAAIC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAI,IAAIR,EAAE,IAFzBxB,EAAJ,IAAAwB,EAAA,GAAOrB,EAAP8B,KAAAC,GAAA,IAAU9B,EAAV,EAAA6B,KAAAC,GAAa7B,EAAb4B,KAAAC,GAAA,EAAA,SAAAC,EAAArC,EAAAE,GAA2Ce,EAA3CjB,EAAAW,EAAAT,EAAAD,EAAAqC,MAAAtC,EAAAC,EAAAsC,OAAArC,EAAAsB,EAAAgB,SAAA,EAAA,EAAAxC,EAAAE,GAAA6B,IAAAX,GAAA,GAAAa,EAAAD,EAAA,EAAA,SAAAS,IAAuDpB,IAAvDrB,EAAAE,EAAAG,EAAAC,EAAAC,EAAAC,EAAAkB,EAAAe,EAAAzC,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA0DI,IAA1DrB,EAAAyC,aAAAhC,GAAAT,EAAA0C,cAAAhC,IAAA0B,EAAApC,EAAAyC,YAAAzC,EAAA0C,cAAArB,EAAAC,EAAA,IAAAQ,GAAA,GAAAC,GAAA,GAAAC,KAAAJ,GAAAG,EAAAY,GAAAC,EAAAhB,GAAAgB,EAAAhB,GAAA,IAAAA,GAAAgB,GAAAC,GAAAhB,GAAAG,EAAAW,GAAAd,EAAAgB,EAAAhB,GAAAgB,IAAAhB,GAAAgB,GAAA1B,IAAAa,EAAAD,EAAA,IAAAV,GAAAC,IAAAD,EAAAC,EAAAH,GAAA,EAAApB,EAAAU,EAAAT,EAAAU,EAAAT,EAAAiC,KAAAC,GAAA,EAAAb,EAAA,GAAAjB,EAAA,GAAAU,EAAAhB,EAAAC,EAAAgB,GAAAZ,EAAA,KAAA8B,KAAAY,IAAA7C,EAAA,GAA+BW,EAA/B,IAAAL,EAAAU,EAAAD,EAAAD,IAAAT,GAAAW,IAAAJ,EAAA,IAAAJ,EAAAO,IAAAR,GAAAQ,IAAAF,EAAA,IAAAJ,EAAAN,IAAAO,EAAAN,IAAA4B,EAAA,GAAA,EAAAvB,EAAAE,EAAAqB,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAvB,EAAAG,EAAAoB,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAA3B,EAAAC,GAAAK,EAAAqB,EAAA,IAAAzB,EAAAC,GAAAI,EAAAoB,EAAA,KAAAvB,EAAAC,GAAAG,EAAAmB,EAAA,KAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAAvB,EAAAC,EAAA,EAAAG,EAAAmB,EAAA,IAAA,GAAAd,IAAAA,GAAA,EAAApB,EAAAmC,KAAAa,IAAAnB,GAAA3B,EAAAiC,KAAAc,IAAApB,GAAAtB,EAAAP,GAAAK,EAAA8B,KAAAa,IAAAlB,IAAAtB,EAAAN,EAAAG,EAAAqB,EAAA1B,GAAAM,EAAA6B,KAAAc,IAAAnB,IAAAW,EAAAvC,EAAAI,EAAA4C,EAAA,GAAAlD,EAAAkD,EAAA,GAAAT,EAAAS,EAAA,IAAA1C,EAAA0C,EAAA,GAAA,EAAAA,EAAA,GAAA7C,EAAA6C,EAAA,GAAA5C,EAAA4C,EAAA,GAAAhD,EAAAgD,EAAA,IAAAxB,EAAAwB,EAAA,GAAA3C,EAAAiB,EAAA2B,MAAA3B,EAAA4B,iBAAA5B,EAAA6B,kBAAA7B,EAAA8B,WAAAzC,GAAAW,EAAA+B,WAAA/B,EAAAgC,aAAArC,GAAAK,EAAAiC,oBAAAvC,EAAA,EAAAM,EAAAkC,OAAA,EAAA,EAAA,GAAAlC,EAAAmC,iBAAA7C,GAAA,EAAAoC,GAAA1B,EAAAoC,iBAAA7C,GAAA,EAAAmB,GAAAV,EAAAqC,UAAA5C,EAAAI,GAAAG,EAAAsC,cAAAtC,EAAAuC,UAAAvC,EAAAwC,YAAAxC,EAAAyC,iBAAArD,GAAAY,EAAA0C,UAAAlD,EAAA,GAAAQ,EAAA2C,WAAA3C,EAAA4C,UAAA,EAAA,MAwBA,SAASC,EAAErE,EAAGC,GAvBV,IAAIC,EAAIwB,EAAC4C,aAAG9C,EAAA+C,eACZ1C,GAAJL,EAAAgD,aAAAtE,EAAAF,GAAAwB,EAAAiD,cAAAvE,GAAAsB,EAAAkD,mBAAAxE,EAAAsB,EAAAmD,gBAAA,CAAA,IAAAtE,EAAAmB,EAAA8C,aAAA9C,EAAAoD,iBAAA,GAAApD,EAAAgD,aAAAnE,EAAAJ,GAAAuB,EAAAiD,cAAApE,GAAAmB,EAAAkD,mBAAArE,EAAAmB,EAAAmD,gBAAA,CAAA,IAAArE,EAAAkB,EAAAqD,gBAAA,GAAArD,EAAAsD,aAAAxE,EAAAJ,GAAAsB,EAAAsD,aAAAxE,EAAAD,GAAAmB,EAAAuD,YAAAzE,GAAAkB,EAAAwD,oBAAA1E,EAAAkB,EAAAyD,aAAA,OAAA3E,EAAuB4E,QAAAC,MAAvB3D,EAAA4D,kBAAA9E,SACM4E,QADNC,MAAA3D,EAAA6D,iBAAAhF,SAEM8B,QAAUgD,MAFhB3D,EAAA6D,iBAAAnF,IAkCA,SAASoF,EAAEtF,GA5BXY,EAAA,SAAAZ,GACMO,IAAJN,EAAAuB,EAAA+D,gBAAO/E,EAAPwD,YAAAxC,EAAAyC,iBAAAhE,GAAAuB,EAAAgE,YAAAhE,EAAAiE,qBAAA,GAAUhF,IAAV,IAAAP,EAAA,EAAAA,EAAA,EAAAA,IAAAsB,EAAAkE,WAAAlE,EAAAmE,4BAAAzF,EAAA,EAAAsB,EAAAoE,KAAApE,EAAAoE,KAAApE,EAAAqE,cAAA7F,EAAAE,IAAaQ,OAAbc,EAAAsE,eAAAtE,EAAAyC,kBAAAzC,EAAAuE,YAAAvE,EAAAwE,SAAAxE,EAAAyE,cAAAzE,EAAAyC,iBAAAzC,EAAA0E,mBAAA1E,EAAA2E,sBAAA3E,EAAAyE,cAAAzE,EAAAyC,iBAAAzC,EAAA0E,mBAAA1E,EAAA4E,QAAA5E,EAAAyE,cAAAzE,EAAAyC,iBAAAzC,EAAA6E,eAAA7E,EAAA8E,eAAA9E,EAAAyE,cAAAzE,EAAAyC,iBAAAzC,EAAA+E,eAAA/E,EAAA8E,eAAA9E,EAAAyE,cAAAzE,EAAAyC,iBAAAzC,EAAAgF,mBAAAhF,EAAA4E,QAAA5E,EAAAwC,YAAAxC,EAAAyC,iBAAA,MAAAhE,EADF,CACkBU,GAAhBS,IAAAX,GAAA,GAAAgC,IAAA,SAAAgE,IAAAhG,IAAAR,EAAAyC,aAAAhC,GAAAT,EAAA0C,cAAAhC,GAAA0B,EAAApC,EAAAyC,YAAAzC,EAAA0C,cAAAvB,IAAAA,GAAA,EAAAI,EAAA2B,MAAA3B,EAAA4B,iBAAA5B,EAAA6B,kBAAA7B,EAAA8B,WAAA9C,GAAAgB,EAAA+B,WAAA/B,EAAAgC,aAAAjD,GAAAiB,EAAAiC,oBAAAnD,EAAA,EAAAkB,EAAAkC,OAAA,EAAA,EAAA,GAAAlC,EAAAqC,UAAAxD,EAAAH,GAAAsB,EAAA2C,WAAA3C,EAAA4C,UAAA,EAAA,KAAA,OACG5C,EAAIkF,WAAG,EAAU,EAAV,EADV,GAAAlG,EAAA6D,EAAA,wFAAA,mPAAAhE,EAAAmB,EAAAmF,mBAAAnG,EAAA,QAAAF,EAAAkB,EAAAoF,kBAAApG,EAAA,KAAAgB,EAAAqF,wBAAAvG,GAAAC,EAAAiB,EAAAsF,eAAAtF,EAAA+B,WAAA/B,EAAAgC,aAAAjD,GAAAiB,EAAAuF,WAAAvF,EAAAgC,aAAA,IAAA9B,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAAF,EAAAwF,aAAAnG,EAAAwD,EAAA,iIAAA,mKAAAvD,EAAAU,EAAAmF,mBAAA9F,EAAA,MAAAE,EAAAS,EAAAmF,mBAAA9F,EAAA,MAAAG,EAAAQ,EAAAmF,mBAAA9F,EAAA,KAAAI,EAAAO,EAAAmF,mBAAA9F,EAAA,SAAAK,EAAAM,EAAAoF,kBAAA/F,EAAA,KAAAW,EAAAqF,wBAAA3F,GAAAC,EAAAK,EAAAsF,eAAAtF,EAAA+B,WAAA/B,EAAAgC,aAAArC,GAAAK,EAAAuF,WAAAvF,EAAAgC,aAAA,WAEEtC,IAAK,IAFPlB,EAAA,IAAA0B,EAAA,KAAAzB,EAAA,IAAAyB,EAAA,GAAAxB,EAAA,IAAAwB,EAAA,GAAArB,EAAA,EAAAC,EAAA,EAAAA,EAAA,EAAAA,IAAA,CAGIL,EAAA,GAAOK,EAAFL,EAAA,IAAeK,EAAxB,GAA+B,EAAGL,EAAA,IAAUgB,EAAL,GAAY,EACpD,IAAA,IAAAV,GAAA,EAAAA,EAAA,EAAAA,GAAA,EAuCO,IAAK,IAAIC,EAAI,EAAGC,GAAK,EAAGA,EAAI,EAAGA,GAAK,EArC5C,IAAiB,IAAAC,GAAA,EAAAA,EAAA,EAAAA,GAAA,EAAA,CACfR,EAAcD,EAAEqC,IAAF/B,EAAdL,EAA2BD,EAAEsC,IAAF9B,EAAWP,EAAtCD,EAA0C,IAACuC,EAC5C,IAAA,IAAA7B,EAAA,EAAAA,EAAA,EAAAA,IAAAX,EAAA,EAAAK,EAAAM,GAAAT,EAAAS,GAuCW,GAAI,GAAKH,GAAK,GAAKA,EArClB,IAAAG,EAAA,EAAAA,EAAA,EAAAA,IAAAX,EAAA,GAAAK,EAAA,GAAAM,GAAAT,EAAAS,GACX,GAAAH,IAAAH,GAAA,GAAAA,IAAAG,KAyCE,OAAOR,EApDT,GAeOqE,EAAErE,aACT,WAuCEC,EAAEgH,YAAc,SAAUjH,GAtCtBwE,OAAAA,GAAF,GAAAxE,EAAAkH,QAAwBzC,GAAAA,GAAxBzE,EAA0CwB,kBAAEkD,GACzCzE,EAAAkH,iBAAmB,aAACvC,SAAzBvE,GAwCE,IAAKI,EAAG,OAAOJ,EAAE+G,kBAAkB,EAvCjC5F,GAAEgD,EACJ,IAAKlE,EAAKuE,EAAAA,eAAV,GACIrD,GAAEsD,EAAAA,MAAaxE,EAAf+G,YAAwBvC,EAC5BI,GAAQC,EAAAA,MAAQC,EAAAA,WAAkB9E,EAHpC,OAIO4E,EAAQC,EAAAA,EAAO3E,EAAC6E,EAAAA,kBAAhB,IACFH,GAAAA,OAAQC,iBAAQE,UAAhB,SAAArF,GACR,QAAAS,IAAA,GAAAT,EAAAkH,QAAAnF,GAAA,IAAA,KAyCM,GAAKuF,OAAOH,iBAAiB,WAAY,SAAUnH,MAvCjDsF,GAAKrF,EAAAsH,WAAA,SAAAvH,GACR,OAAAA,EAAAoH,kBAAa,GAEbpD,IAAAA,EAAAA,EAyCA9D,EAAI,EAxCNoH,OAASpH,iBAAT,YAAA,SAAAG,GAA8BqF,IAAAA,EAAAA,OAAaC,EAA3C,IAAArF,EAAAD,EAAAmH,MAAAvH,EAAAoH,WA4CI9G,EAAIF,EAAEoH,MAAQxH,EAAEyH,UA3CpB,OAAS5B,EAAAA,EAAAA,EAAAA,EAAiB7B,EAAAA,EAAAA,EAAAA,EAAAA,EAAnB1D,EAAwCwF,KAAAA,IAC1C,GALPuB,OAKmBH,iBALnB,YAAA,SAAA9G,GAMD,IAAAI,EAAA,OAAAJ,EAAA+G,kBAAA,EA6CK,IAAI9G,EAAID,EAAEsH,eAAe,GA3C/BpH,GAAaD,EAAAkH,MAAAvH,EAAAoH,YAAA,EACH3E,GAAAA,EAAAA,MAAehC,EAAjBgH,WAAwB/E,EAC/B,OAAAX,EAAAzB,EAAAP,EAAAiC,EAAAzB,EAAAN,EAAAF,EAAAO,EAAAL,EAAAM,EAAAiC,IAAApC,EAAA+G,kBAAA,IA6CM,GAAKnH,EAAE2H,YAAc,SAAU5H,GA5C9B,OAAC0G,EAAAA,kBAAyB,GACzBzG,EAAID,QAAU,SAAUA,GAC3B,QAAWS,IAAmB,EAAXT,EAAA6H,WAAmBvH,EAAI6B,KAAK2F,IAA/CvG,EAAA,EAAA,GAAAvB,EAAA6H,WAAA,IAAAtG,EAAAY,KAAA4F,IAAAxG,EAAA,GAAA,KAAAvB,EAAAgI,OAAA,EAAAzG,EAAAY,KAAA2F,IAAAvG,EAAA,EAAA,GAAA,EAAAvB,EAAAgI,SAAAzG,EAAAY,KAAA4F,IAAAxG,EAAA,GAAA,KAAAkB,KAAA,IAzBJ,GA0BS,CACHwF,OAAK,SAAYjI,GACfE,EAAA,EAAAkB,IAAKX,GAAK,GAAVY,EAAyB,GAAOrB,EAAAkI,cAAA,GAAA,EAAAnG,IAAAT,GAAA,KAAAW,EAAAD,EAAAF,EAAAD,EAAAN,EAAA,EAAAC,EAAA2G,cAAAvH,GAAA6F,IAC9BvG,SAAUK,EAAGL,EAAGA,EAAFG,GA+ChB,IAAIC,OAAI,KAAY,IAAIgH,OAAOc,gBAAgBC,WA9C7C9H,EAAKP,EAAKsI,OAAoB9H,EAAIH,EAkDhCI,EAAI,IAAImB,MAAMrB,GAjDZG,EAAA,IAAAkB,MAAUrB,GACcI,EAAA,IAAMiB,MAAQjB,GAAxCC,EAAA,EACFC,EAAA,EACDC,EAAAP,EAPH,IAAAD,EAAA,CADF,IAAA,IAAAS,EAAA,EAAAA,EAAAR,EAAAQ,IAAAL,EAAAK,GAAA,EAAAJ,EAAAI,GAAA,EASDF,EAAAN,EAAAO,EAAA,EAEIkG,SACPhG,IACIiG,KAAczG,GAAAN,EAAUF,GAGhB,SAASoH,EAAAA,GACjB,OAAA,SAAAnH,GACU0H,MAAAA,EAAAA,KAAV,EAAA1H,EAAAsI,QAAA5H,EAAAX,GAAAC,EAAAsI,MAAA7H,EAAAV,GAAA,EAAAa,GAAAZ,EAAAsI,MAAAzH,MAAA0H,MAAA7H,EAAAX,KAAAC,EAAAwI,OAAA/H,EAAAV,KAAAY,GAAAX,EAAAwI,OAAA/H,EAAAV,GAAAU,EAAAV,GAAAC,EAAAwI,OAAA,GAAA3H,GAAAT,EAAAO,EAAAC,KAIMyG,SAAOH,EAAAA,EAAAA,GACN,OAAQ,WACH,GAACA,MAAAA,EAAAA,IAAiBrG,IAAAH,EAAAV,GAAYS,EAAAT,KAAUD,GAA9CW,EACLV,GAAKA,EAAEsH,GAAAA,EAAAA,GAAF5G,EAAeV,GAAA,GAAAa,GAAaT,EAAAO,EAAAC,IAAA,KAAA6H,KAAAC,QAAAD,KAAAC,OAAA,IACzBvB,GAAAA,EAAAA,CAbX,IAAA9G,EAAAoI,KAAAE,wBAAAC,MAAA,8BAAA,IAAA,YAeAtI,EAAA,IAAAuI,KAAA,CAAAJ,KAAAK,UAAA,CAAAC,KAAA1I,IAGkBG,EAARR,GAAA,IAAAgJ,MAAAxI,EAAAR,GAAAiJ,OAAAlI,EAAAP,EAAAR,GAAAkJ,IAAA7B,OAAA8B,IAAAC,gBAAA9I,QACY8G,EAAAA,GAAAA,KAApB0B,SAAA/H,SACMkE,QAAYwC,MADlB,uBAAA1H,EAAAC,GAAA,KAAAe,KAIQ,IAAAD,EAASqG,EAAAA,EAAAA,EAAAA,IAAF,CACLO,IAAAA,EAAAA,EAAAA,GACDH,EAAFrG,EAAAmI,OAAYjC,EAAAA,YADnB,MAESI,EAAF,QAAYC,GAAb,QAFNtG,GAAA,QAAAA,EAGYE,EAALD,GAAY,QAAWD,EACtBwG,IAAAA,GAAFvG,EAAgBZ,EAAAM,GAAA,IAAAkI,MAAaxI,EAAAM,GAAAmI,OAAA,WAC1B9B,IAAAA,EAAAA,GAAFpG,KACMP,EAAAM,GAAAoI,IAAAhI,MACEnB,CAdjB,IAAAuB,EAAA,IAAA6G,eAgBG7G,EAAA2H,OAAAhI,EAAAH,EAAAM,GAAAf,IAAAiB,EAAA8G,WAAApH,EAAAF,IAAAQ,EAAAgI,KAAA,MAAApI,GAAA,GAAAG,IAAAC,EAAAiI,aAAA,eAAAjI,EAAAkI,SA3CKvJ,CAgDCF,EAAGA,SADN,GAAA,EAAAsF,EAAA,SAAAtF,GAEGE,EAFHF,EAAAoB,GAAA,EAAAqF,OAIAiD,OACM,WADNjH,MAOE,SAAAnC,IAA4BI,OAAC,EApH7C,IAAUV,EAsKFE,EAAGG,EAKP,iBAAoBH,GA3KdF,EAsHK,CAwDb2J,OAAQ3J,EAtDI4J,SAAA,CACE,CA5HpB1J,EA4HoB,UA5HpBA,EA4HoB,UA5HpBA,EA4HoB,UA5HpBA,EA4HoB,UA5HpBA,EA4HoB,UA5HpBA,EA4HoB,cAkDcyJ,UAAYzJ,EAAIC,SAASC,eAAeF,IAAKA,EAAE2J,QAAU5J,EAAEC,GAAIA,EAAE4J,cAAgBxJ,EAAGJ,EAAE6J,YAAczJ,EAAGJ,EAAE2J,QAAQ5B,SAAS5H,EAAI,IAAI2J,QAAQJ,SAAW5J,EAAE4J,SAAUvJ,EAAE6H,cAAgBlI,EAAEkI,cAAe7H","file":"../c3dpano.min.js","sourcesContent":["var path;\nfunction Ceramic3DPanorama(e, r, t) {\n  path = t,\n    function (e) {\n      function r(e) {\n        var r = e;\n        \"string\" == typeof r && (r = document.getElementById(r));\n        var t, a, n, o, i, f, u, c, s, l, v, E, d, m, g, p, T, _, h, R, A = r.getContext(\"webgl\") || r.getContext(\"experimental-webgl\");\n        if (!U) var U = \"undefined\" != typeof Float32Array ? Float32Array : Array;\n        var P, L, w, I, M, B = new U(16),\n          b = new U(9),\n          F = Math.PI / 300,\n          x = 2 * Math.PI,\n          C = Math.PI / 2;\n\n        function S(e, r, t, a, n) {\n          var o, i, f, u, c, s, l, v, E, d = e / r,\n            m = a * Math.tan(t / 2),\n            g = m * d;\n          l = 1 / ((i = g) - (o = -g)), v = 1 / ((u = m) - (f = -m)), E = 1 / ((c = a) - (s = n)), B[0] = 2 * c * l, B[1] = 0, B[2] = 0, B[3] = 0, B[4] = 0, B[5] = 2 * c * v, B[6] = 0, B[7] = 0, B[8] = (o + i) * l, B[9] = (f + u) * v, B[10] = (c + s) * E, B[11] = -1, B[12] = 0, B[13] = 0, B[14] = c * s * 2 * E, B[15] = 0\n        }\n\n        function y(e, t) {\n          u = e, c = t, r.width = e, r.height = t, A.viewport(0, 0, e, t), T = !0, w = !1, I = 0, M = 0\n        }\n\n        function D() {\n          var e, t, a, n, o, i, U, D;\n          f && (r.scrollWidth == u && r.scrollHeight == c || (y(r.scrollWidth, r.scrollHeight), h = R - 1), !w || 0 == I && 0 == M || (L += M * F, (P += I * F) > x ? P -= x : P <= 0 && (P += x), L > C ? L = C : L < -C && (L = -C), I = 0, M = 0, T = !0), h != R && (h = R, T = !0, S(u, c, Math.PI / 3 - R / 10, .05, 10)), T && (T = !1, e = Math.cos(P), t = Math.sin(P), a = Math.cos(L), n = Math.sin(L), o = e * a, i = t * a, U = e * n, D = t * n, b[0] = e, b[1] = D, b[2] = -i, b[3] = 0, b[4] = a, b[5] = n, b[6] = t, b[7] = -U, b[8] = o, A.clear(A.COLOR_BUFFER_BIT | A.DEPTH_BUFFER_BIT), A.useProgram(l), A.bindBuffer(A.ARRAY_BUFFER, p), A.vertexAttribPointer(g, 3, A.FLOAT, !1, 0, 0), A.uniformMatrix3fv(v, !1, b), A.uniformMatrix4fv(E, !1, B), A.uniform1f(m, _), A.activeTexture(A.TEXTURE0), A.bindTexture(A.TEXTURE_CUBE_MAP, s), A.uniform1i(d, 0), A.drawArrays(A.TRIANGLES, 0, 36)))\n        }\n\n        function X(e, r) {\n          var t = A.createShader(A.VERTEX_SHADER);\n          if (A.shaderSource(t, e), A.compileShader(t), A.getShaderParameter(t, A.COMPILE_STATUS)) {\n            var a = A.createShader(A.FRAGMENT_SHADER);\n            if (A.shaderSource(a, r), A.compileShader(a), A.getShaderParameter(a, A.COMPILE_STATUS)) {\n              var n = A.createProgram();\n              if (A.attachShader(n, t), A.attachShader(n, a), A.linkProgram(n), A.getProgramParameter(n, A.LINK_STATUS)) return n;\n              console.error(A.getProgramInfoLog(n))\n            } else console.error(A.getShaderInfoLog(a))\n          } else console.error(A.getShaderInfoLog(t))\n        }\n\n        function N(e) {\n          s = function (e) {\n            var r = A.createTexture();\n            A.bindTexture(A.TEXTURE_CUBE_MAP, r), A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL, !0);\n            for (var t = 0; t < 6; t++) A.texImage2D(A.TEXTURE_CUBE_MAP_POSITIVE_X + t, 0, A.RGBA, A.RGBA, A.UNSIGNED_BYTE, e[t]);\n            return A.generateMipmap(A.TEXTURE_CUBE_MAP), A.getError() == A.NO_ERROR ? A.texParameteri(A.TEXTURE_CUBE_MAP, A.TEXTURE_MIN_FILTER, A.LINEAR_MIPMAP_LINEAR) : A.texParameteri(A.TEXTURE_CUBE_MAP, A.TEXTURE_MIN_FILTER, A.LINEAR), A.texParameteri(A.TEXTURE_CUBE_MAP, A.TEXTURE_WRAP_S, A.CLAMP_TO_EDGE), A.texParameteri(A.TEXTURE_CUBE_MAP, A.TEXTURE_WRAP_T, A.CLAMP_TO_EDGE), A.texParameteri(A.TEXTURE_CUBE_MAP, A.TEXTURE_MAG_FILTER, A.LINEAR), A.bindTexture(A.TEXTURE_CUBE_MAP, null), r\n          }(e), f = !0, T = !1, D()\n        }\n\n        function Y() {\n          f || (r.scrollWidth == u && r.scrollHeight == c || y(r.scrollWidth, r.scrollHeight), T && (T = !1, A.clear(A.COLOR_BUFFER_BIT | A.DEPTH_BUFFER_BIT), A.useProgram(i), A.bindBuffer(A.ARRAY_BUFFER, o), A.vertexAttribPointer(n, 3, A.FLOAT, !1, 0, 0), A.uniform1f(a, t), A.drawArrays(A.TRIANGLES, 0, 6)))\n        }\n        return A.clearColor(1, 1, 1, 1), i = X(\"attribute vec3 a; varying vec2 v; void main() {v = a.xy; gl_Position = vec4(a, 1.0);}\", \"precision mediump float; uniform float perc; varying vec2 v; void main() {if (abs(v.x) > 0.4 || abs(v.y) > 0.05) discard;if ((v.x + 0.4)/0.8 < perc) gl_FragColor = vec4(1.0,  0.0,  0.0,  1.0); else gl_FragColor = vec4(0.7, 0.7, 0.7, 1.0);}\"), a = A.getUniformLocation(i, \"perc\"), n = A.getAttribLocation(i, \"a\"), A.enableVertexAttribArray(n), o = A.createBuffer(), A.bindBuffer(A.ARRAY_BUFFER, o), A.bufferData(A.ARRAY_BUFFER, new U([-1, -1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0]), A.STATIC_DRAW), l = X(\"uniform mat3 vm; uniform mat4 pm; attribute vec3 a; varying vec3 v; void main() {v = a; gl_Position = pm * vec4(vm * a, 1.0);}\", \"precision mediump float; uniform samplerCube t; uniform float Ysign; varying vec3 v; void main() {gl_FragColor = textureCube(t, vec3(v.x, Ysign * v.z, -v.y));}\"), v = A.getUniformLocation(l, \"vm\"), E = A.getUniformLocation(l, \"pm\"), d = A.getUniformLocation(l, \"t\"), m = A.getUniformLocation(l, \"Ysign\"), g = A.getAttribLocation(l, \"a\"), A.enableVertexAttribArray(g), p = A.createBuffer(), A.bindBuffer(A.ARRAY_BUFFER, p), A.bufferData(A.ARRAY_BUFFER, function () {\n            for (var e = new U(108), r = new U(3), t = new U(3), a = 0, n = 0; n < 3; n++) {\n              r[0] = n, r[1] = (n + 1) % 3, r[2] = (n + 2) % 3;\n              for (var o = -1; o < 2; o += 2)\n                for (var i = 0, f = -1; f < 2; f += 2)\n                  for (var u = -1; u < 2; u += 2) {\n                    t[r[0]] = o, t[r[1]] = f, t[r[2]] = u;\n                    for (var c = 0; c < 3; c++) e[3 * a + c] = t[c];\n                    if (1 == i || 2 == i)\n                      for (c = 0; c < 3; c++) e[3 * (a + 2) + c] = t[c];\n                    2 == i && (a += 2), a++, i++\n                  }\n            }\n            return e\n          }(), A.STATIC_DRAW),\n          function () {\n            r.onmousedown = function (e) {\n              return f ? (1 == e.which && (w = !0), e.preventDefault(), !1) : (e.preventDefault(), !1)\n            }, r.addEventListener(\"touchstart\", function (a) {\n              if (!f) return a.preventDefault(), !1;\n              w = !0;\n              var n = a.changedTouches[0],\n                o = (n.pageX - r.offsetLeft) / 3,\n                i = (n.pageY - r.offsetTop) / 3;\n              return e = o, t = i, a.preventDefault(), !1\n            }, !1), window.addEventListener(\"mouseup\", function (e) {\n              return !!f && (1 == e.which && (w = !1), !1)\n            }, !1), window.addEventListener(\"touchend\", function (e) {\n            }, !1), r.ontouchend = function (e) {\n              return e.preventDefault(), !1\n            };\n            var e = 0,\n              t = 0;\n            window.addEventListener(\"mousemove\", function (a) {\n              if (!f) return !1;\n              var n = a.pageX - r.offsetLeft,\n                o = a.pageY - r.offsetTop;\n              return I = n - e, M = o - t, e = n, t = o, D(), !1\n            }, !1), window.addEventListener(\"touchmove\", function (a) {\n              if (!f) return a.preventDefault(), !1;\n              var n = a.changedTouches[0],\n                o = (n.pageX - r.offsetLeft) / 3,\n                i = (n.pageY - r.offsetTop) / 3;\n              return I = o - e, M = i - t, e = o, t = i, D(), a.preventDefault(), !1\n            }, !1), r.ontouchmove = function (e) {\n              return e.preventDefault(), !1\n            }, r.onwheel = function (e) {\n              return !!f && (e.wheelDelta > 0 ? R = Math.min(R + 1, 6) : e.wheelDelta < 0 && (R = Math.max(R - 1, -10)), e.deltaY < 0 ? R = Math.min(R + 1, 6) : e.deltaY > 0 && (R = Math.max(R - 1, -10)), D(), !1)\n            }\n          }(), {\n            reload: function (e) {\n              t = 0, f = !1, T = !0, _ = 1 == e.cameraVersion ? 1 : -1, h = -100, R = 0, P = 0, L = 0, w = !1, I = 0, M = 0, A.deleteTexture(s), Y(),\n                function (e, r, t, a) {\n                  var n = void 0 !== (new window.XMLHttpRequest).onprogress,\n                    o = e.length,\n                    i = o;\n                  r && i++;\n                  var f = new Array(o),\n                    u = new Array(o),\n                    c = new Array(o),\n                    s = 0,\n                    l = 0,\n                    v = o;\n                  if (!n) {\n                    for (var E = 0; E < o; E++) u[E] = 0, c[E] = 1;\n                    l = o, v = 0\n                  }\n\n                  function d() {\n                    0 == --i && t(f)\n                  }\n\n                  function m(e) {\n                    return function (r) {\n                      isNaN(c[e]) && r.total > 0 && (c[e] = r.total, u[e] = 0, l += r.total, v--), !isNaN(c[e]) && r.loaded > u[e] && (s += r.loaded - u[e], u[e] = r.loaded, 0 == v && a(s / l))\n                    }\n                  }\n\n                  function g(r, t) {\n                    return function () {\n                      if (isNaN(c[r]) ? v-- : c[r] > u[r] && (s += c[r] - u[r], u[r] = c[r], 0 == v && a(s / l)), this.status >= 200 && this.status < 400)\n                        if (t) {\n                          var n = this.getAllResponseHeaders().match(/^Content-Type\\:\\s*(.*?)$/im)[1] || \"image/png\",\n                            o = new Blob([this.response], {\n                              type: n\n                            });\n                          f[r] = new Image, f[r].onload = d, f[r].src = window.URL.createObjectURL(o)\n                        } else f[r] = this.response, d();\n                      else console.error(\"Unable to load file \" + e[r] + \"!\"), d()\n                    }\n                  }\n                  for (E = 0; E < o; E++) {\n                    var p = e[E],\n                      T = p.substr(p.lastIndexOf(\".\")),\n                      _ = \".jpg\" == T || \".bmp\" == T || \".png\" == T,\n                      h = _ || \".bin\" == T;\n                    if (!n && _) f[E] = new Image, f[E].onload = function () {\n                      a(++s / l), d()\n                    }, f[E].src = p;\n                    else {\n                      var R = new XMLHttpRequest;\n                      R.onload = g(E, _), n && (R.onprogress = m(E)), R.open(\"GET\", p, !0), h && (R.responseType = \"arraybuffer\"), R.send()\n                    }\n                  }\n                  r && (r(), d())\n                }(e.panorams[0], null, N, function (e) {\n                  t = e, T = !0, Y()\n                })\n            },\n            redraw: function () {\n              D()\n            }\n          }\n      }! function () {\n        var t, a;\n\n        function n() {\n          return !1\n        }\n        \"string\" == typeof (t = e.canvas) && (t = document.getElementById(t)), t.c3dpano = r(t), t.onselectstart = n, t.ondragstart = n, t.c3dpano.reload(((a = new Object).panorams = e.panorams, a.cameraVersion = e.cameraVersion, a))\n      }()\n    }({\n      canvas: e,\n      panorams: [\n        [path + \"/+X.jpg\", path + \"/-X.jpg\", path + \"/+Y.jpg\", path + \"/-Y.jpg\", path + \"/+Z.jpg\", path + \"/-Z.jpg\"]\n      ]\n    })\n}"]}